import Test

import "EVM"

access(all) let coinTossBytecode = "608060405234801561001057600080fd5b50610bed806100206000396000f3fe6080604052600436106100745760003560e01c80638c0647461161004e5780638c064746146100cb578063cd1a44db14610113578063d0d250bd1461014e578063fcf36b6a1461018357600080fd5b80631b3ed72214610080578063799ae223146100ac5780638c03fe15146100b657600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b50610095600281565b60405160ff90911681526020015b60405180910390f35b6100b46101b0565b005b3480156100c257600080fd5b506100b46102f5565b3480156100d757600080fd5b506101036100e6366004610a41565b6001600160a01b0316600090815260026020526040902054151590565b60405190151581526020016100a3565b34801561011f57600080fd5b5061014061012e366004610a71565b60036020526000908152604090205481565b6040519081526020016100a3565b34801561015a57600080fd5b5061016b6801000000000000000181565b6040516001600160a01b0390911681526020016100a3565b34801561018f57600080fd5b5061014061019e366004610a41565b60026020526000908152604090205481565b3461020e5760405162461bcd60e51b815260206004820152602360248201527f4d7573742073656e6420464c4f5720746f20706c61636520666c69702061206360448201526237b4b760e91b60648201526084015b60405180910390fd5b336000908152600260205260409020541561028a5760405162461bcd60e51b815260206004820152603660248201527f4d75737420636c6f73652070726576696f757320636f696e20666c6970206265604482015275666f726520706c6163696e672061206e6577206f6e6560501b6064820152608401610205565b600061029461047a565b3360008181526002602090815260408083208590558483526003825291829020349081905582518581529182015292935090917faaf5204450758753a474bce0ff33a69922372c674f7f6cde7adc701030fb3c4c910160405180910390a250565b3360009081526002602052604090205461036b5760405162461bcd60e51b815260206004820152603160248201527f43616c6c657220686173206e6f7420666c6970706564206120636f696e202d206044820152701b9bdd1a1a5b99c81d1bc81c995d99585b607a1b6064820152608401610205565b3360009081526002602052604081208054908290559061038a82610582565b90506000610399600283610a8a565b600084815260036020526040812080549082905591925060ff8316810361042e576103c5600283610ad5565b604051909150600090339083156108fc0290849084818181858888f1935050505090508061042c5760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e64207072697a6560601b6044820152606401610205565b505b6040805186815260ff8516602082015290810182905233907ffa8362afdddf0c36107d3f3ad3c875ecd4c311118133c0e4b2b8e6ac2a0e31059060600160405180910390a25050505050565b600180546000918261048b83610af2565b919050555060006001549050600060405180604001604052806104ac6107c9565b67ffffffffffffffff90811682524360209283015260008054600181018255908052835160029091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180549290931667ffffffffffffffff199092168217909255838301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56490920182905560408051878152938401919091528201529091507f7886956edccde10901843c3e51fc26016455e9248e210a29c2a57ead63ad226e9060600160405180910390a150919050565b600080610590600184610b0b565b60005490915063ffffffff82161061061b5760405162461bcd60e51b815260206004820152604260248201527f496e76616c69642072657175657374204944202d2076616c756520657863656560448201527f647320746865206e756d626572206f66206578697374696e6720726571756573606482015261747360f01b608482015260a401610205565b6000808263ffffffff168154811061063557610635610b2f565b6000918252602080832060408051808201909152600290930201805467ffffffffffffffff1683526001015490820152915061066f6107c9565b90508067ffffffffffffffff16826000015167ffffffffffffffff16106107085760405162461bcd60e51b815260206004820152604160248201527f43616e6e6f742066756c66696c6c207265717565737420756e74696c2073756260448201527f73657175656e7420466c6f77206e6574776f726b20626c6f636b2068656967686064820152601d60fa1b608482015260a401610205565b600061071783600001516108fb565b6040516001600160c01b031960c083901b1660208201526001600160e01b031960e089901b166028820152909150602c0160408051808303601f19018152828252805160209182012086518783015163ffffffff8c16865267ffffffffffffffff9182169386019390935292840191909152908116606083015291507f9f3bf4fa8022192c0b0425a106a1a48898dba8d4e18790dd57868b1cc56f58e69060800160405180910390a195945050505050565b60408051600481526024810182526020810180516001600160e01b03166329f43eb360e11b179052905160009182918291680100000000000000019161080f9190610b45565b600060405180830381855afa9150503d806000811461084a576040519150601f19603f3d011682016040523d82523d6000602084013e61084f565b606091505b5091509150816108dd5760405162461bcd60e51b815260206004820152604d60248201527f556e7375636365737366756c2063616c6c20746f20436164656e63652041726360448201527f68207072652d636f6d70696c65207768656e206665746368696e6720466c6f7760648201526c08189b1bd8dac81a195a59da1d609a1b608482015260a401610205565b6000818060200190518101906108f39190610b74565b949350505050565b60405167ffffffffffffffff8216602482015260009081908190680100000000000000019060440160408051601f198184030181529181526020820180516001600160e01b0316633c53afdf60e11b179052516109589190610b45565b600060405180830381855afa9150503d8060008114610993576040519150601f19603f3d011682016040523d82523d6000602084013e610998565b606091505b509150915081610a225760405162461bcd60e51b815260206004820152604960248201527f556e7375636365737366756c2063616c6c20746f20436164656e63652041726360448201527f68207072652d636f6d70696c65207768656e206665746368696e672072616e646064820152686f6d20736f7572636560b81b608482015260a401610205565b600081806020019051810190610a389190610b9e565b95945050505050565b600060208284031215610a5357600080fd5b81356001600160a01b0381168114610a6a57600080fd5b9392505050565b600060208284031215610a8357600080fd5b5035919050565b600067ffffffffffffffff80841680610ab357634e487b7160e01b600052601260045260246000fd5b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610aec57610aec610abf565b92915050565b600060018201610b0457610b04610abf565b5060010190565b63ffffffff828116828216039080821115610b2857610b28610abf565b5092915050565b634e487b7160e01b600052603260045260246000fd5b6000825160005b81811015610b665760208186018101518583015201610b4c565b506000920191825250919050565b600060208284031215610b8657600080fd5b815167ffffffffffffffff81168114610a6a57600080fd5b600060208284031215610bb057600080fd5b505191905056fea26469706673582212205d1c2726f88985efee2736987a6840951541f037e98ba6a57e8abb6e7accd38164736f6c63430008130033"

access(all)
fun getCoinTossBytecode(): String {
    return coinTossBytecode
}

access(all)
fun _executeScript(_ path: String, _ args: [AnyStruct]): Test.ScriptResult {
    return Test.executeScript(Test.readFile(path), args)
}

access(all)
fun getEVMBalance(_ evmAddressHex: String): UFix64 {
    let res = _executeScript(
        "./scripts/get_evm_balance.cdc",
        [evmAddressHex]
    )
    Test.expect(res, Test.beSucceeded())
    return res.returnValue! as! UFix64
}